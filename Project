#include <iostream>
#include <vector>
#include <string>
using namespace std;

// Class definition for Book
class Book {
private:
    string title;
    string author;
    string isbn;

public:
    // Constructor
    Book(string t, string a, string i) : title(t), author(a), isbn(i) {}

    // Getter functions
    string getTitle() const { return title; }
    string getAuthor() const { return author; }
    string getISBN() const { return isbn; }

    // Display book details
    void displayBook() const {
        cout << "Title: " << title << ", Author: " << author << ", ISBN: " << isbn << endl;
    }
};

// Class definition for Library
class Library {
private:
    vector<Book> books;

public:
    // Function to add a book
    void addBook(const Book &book) {
        books.push_back(book);
        cout << "Book added successfully!" << endl;
    }

    // Function to search for a book by title
    void searchBookByTitle(const string &title) const {
        bool found = false;
        for (const auto &book : books) {
            if (book.getTitle() == title) {
                cout << "Book found: ";
                book.displayBook();
                found = true;
                break;
            }
        }
        if (!found)
            cout << "No book found with the title \"" << title << "\"." << endl;
    }

    // Function to display all books
    void displayAllBooks() const {
        if (books.empty()) {
            cout << "No books in the library." << endl;
            return;
        }
        cout << "Library Collection:" << endl;
        for (const auto &book : books) {
            book.displayBook();
        }
    }
};

// Main function
int main() {
    Library library;

    // Team member roles:
    // Member 1: Add books
    // Member 2: Search books
    // Member 3: Display all books

    int choice;
    do {
        cout << "\nLibrary Management System\n";
        cout << "1. Add Book\n";
        cout << "2. Search Book by Title\n";
        cout << "3. Display All Books\n";
        cout << "4. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;

        cin.ignore(); // To handle newline character after cin

        switch (choice) {
        case 1: {
            string title, author, isbn;
            cout << "Enter book title: ";
            getline(cin, title);
            cout << "Enter book author: ";
            getline(cin, author);
            cout << "Enter book ISBN: ";
            getline(cin, isbn);
            library.addBook(Book(title, author, isbn));
            break;
        }
        case 2: {
            string title;
            cout << "Enter the title of the book to search: ";
            getline(cin, title);
            library.searchBookByTitle(title);
            break;
        }
        case 3:
            library.displayAllBooks();
            break;
        case 4:
            cout << "Exiting the system. Goodbye!" << endl;
            break;
        default:
            cout << "Invalid choice. Please try again." << endl;
        }
    } while (choice != 4);

    return 0;
}
